// Generated by Dagger (https://dagger.dev).
package uz.gita.composecantactapp.di;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;
import uz.gita.composecantactapp.data.local.room.dao.ContactDao;
import uz.gita.composecantactapp.data.local.room.database.AppDatabase;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class RoomModule_ProvideContactDaoFactory implements Factory<ContactDao> {
  private final Provider<AppDatabase> dbProvider;

  public RoomModule_ProvideContactDaoFactory(Provider<AppDatabase> dbProvider) {
    this.dbProvider = dbProvider;
  }

  @Override
  public ContactDao get() {
    return provideContactDao(dbProvider.get());
  }

  public static RoomModule_ProvideContactDaoFactory create(Provider<AppDatabase> dbProvider) {
    return new RoomModule_ProvideContactDaoFactory(dbProvider);
  }

  public static ContactDao provideContactDao(AppDatabase db) {
    return Preconditions.checkNotNullFromProvides(RoomModule.INSTANCE.provideContactDao(db));
  }
}
