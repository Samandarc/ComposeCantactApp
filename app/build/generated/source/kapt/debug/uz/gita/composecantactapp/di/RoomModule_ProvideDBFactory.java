// Generated by Dagger (https://dagger.dev).
package uz.gita.composecantactapp.di;

import android.content.Context;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;
import uz.gita.composecantactapp.data.local.room.database.AppDatabase;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata("dagger.hilt.android.qualifiers.ApplicationContext")
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class RoomModule_ProvideDBFactory implements Factory<AppDatabase> {
  private final Provider<Context> contextProvider;

  public RoomModule_ProvideDBFactory(Provider<Context> contextProvider) {
    this.contextProvider = contextProvider;
  }

  @Override
  public AppDatabase get() {
    return provideDB(contextProvider.get());
  }

  public static RoomModule_ProvideDBFactory create(Provider<Context> contextProvider) {
    return new RoomModule_ProvideDBFactory(contextProvider);
  }

  public static AppDatabase provideDB(Context context) {
    return Preconditions.checkNotNullFromProvides(RoomModule.INSTANCE.provideDB(context));
  }
}
